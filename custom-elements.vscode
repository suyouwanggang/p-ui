{
  "version": 1,
  "tags": [
    {
      "name": "simple-greeting",
      "description": "Attributes:\n\n  * `name` {`string`} - \n\n  * `size` {`number`} - \n\n  * `itemSize` {`number`} - \n\nProperties:\n\n  * `name` {`string`} - \n\n  * `size` {`number`} - \n\n  * `itemSize` {`number`} - ",
      "attributes": [
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name\n\nDefault: 中国 "
        },
        {
          "name": "size",
          "description": "`size` {`number`} - \n\nProperty: size\n\nDefault: 14"
        },
        {
          "name": "itemSize",
          "description": "`itemSize` {`number`} - \n\nProperty: itemSize\n\nDefault: 10"
        }
      ]
    },
    {
      "name": "p-ac-panel",
      "description": "Events:\n\n  * `before-tab` {} - change 改变child panel 之前\n\n  * `tab` {} - change 改变 child panel state 之后\n\nAttributes:\n\n  * `multi` {`boolean`} - \n\nProperties:\n\n  * `multi` {`boolean`} - \n\n  * `childTabPanel` {`PACTab[]`} - \n\n  * `activeTab` {`PACTab[]`} - ",
      "attributes": [
        {
          "name": "multi",
          "description": "`multi` {`boolean`} - \n\nProperty: multi\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onbefore-tab",
          "description": "`before-tab` {} - change 改变child panel 之前"
        },
        {
          "name": "ontab",
          "description": "`tab` {} - change 改变 child panel state 之后"
        }
      ]
    },
    {
      "name": "p-ac-tab",
      "description": "Events:\n\n  * `before-tab-change` {`CustomEvent<{ tab: this; }>`} - \n\n  * `tab-change` {`CustomEvent<{ tab: this; }>`} - \n\nAttributes:\n\n  * `active` {`boolean`} - \n\n  * `key` {`string`} - \n\n  * `header` {`string`} - \n\nProperties:\n\n  * `active` {`boolean`} - \n\n  * `key` {`string`} - \n\n  * `header` {`string`} - \n\n  * `accordionPanel` {`PAccordionPanel`} - ",
      "attributes": [
        {
          "name": "active",
          "description": "`active` {`boolean`} - \n\nProperty: active\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "key",
          "description": "`key` {`string`} - \n\nProperty: key\n\nDefault: undefined"
        },
        {
          "name": "header",
          "description": "`header` {`string`} - \n\nProperty: header\n\nDefault: undefined"
        },
        {
          "name": "onbefore-tab-change",
          "description": "`before-tab-change` {`CustomEvent<{ tab: this; }>`} - "
        },
        {
          "name": "ontab-change",
          "description": "`tab-change` {`CustomEvent<{ tab: this; }>`} - "
        }
      ]
    },
    {
      "name": "p-button",
      "description": "Attributes:\n\n  * `disabled` {`boolean`} - \n\n  * `block` {`boolean`} - \n\n  * `toggle` {`boolean`} - \n\n  * `type` {`buttonTypeValue`} - \n\n  * `shape` {`shapeType`} - \n\n  * `name` {`string`} - \n\n  * `value` {`string`} - \n\n  * `checked` {`boolean`} - \n\n  * `loading` {`boolean`} - \n\n  * `href` {`string`} - \n\n  * `target` {`targetType`} - \n\n  * `rel` {`string`} - \n\n  * `download` {`string`} - \n\n  * `icon` {`string`} - \n\nProperties:\n\n  * `disabled` {`boolean`} - \n\n  * `block` {`boolean`} - \n\n  * `toggle` {`boolean`} - \n\n  * `type` {`buttonTypeValue`} - \n\n  * `shape` {`shapeType`} - \n\n  * `name` {`string`} - \n\n  * `value` {`string`} - \n\n  * `checked` {`boolean`} - \n\n  * `loading` {`boolean`} - \n\n  * `href` {`string`} - \n\n  * `target` {`targetType`} - \n\n  * `rel` {`string`} - \n\n  * `download` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `iconEl` {`Element | null`} - \n\n  * `btn` {`Element | null`} - ",
      "attributes": [
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled",
          "valueSet": "v"
        },
        {
          "name": "block",
          "description": "`block` {`boolean`} - \n\nProperty: block",
          "valueSet": "v"
        },
        {
          "name": "toggle",
          "description": "`toggle` {`boolean`} - \n\nProperty: toggle",
          "valueSet": "v"
        },
        {
          "name": "type",
          "description": "`type` {`buttonTypeValue`} - \n\nProperty: type",
          "values": [
            {
              "name": "primary"
            },
            {
              "name": "danger"
            },
            {
              "name": "flat"
            },
            {
              "name": "dashed"
            }
          ]
        },
        {
          "name": "shape",
          "description": "`shape` {`shapeType`} - \n\nProperty: shape",
          "values": [
            {
              "name": ""
            },
            {
              "name": "circle"
            }
          ]
        },
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value"
        },
        {
          "name": "checked",
          "description": "`checked` {`boolean`} - \n\nProperty: checked",
          "valueSet": "v"
        },
        {
          "name": "loading",
          "description": "`loading` {`boolean`} - \n\nProperty: loading\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "href",
          "description": "`href` {`string`} - \n\nProperty: href"
        },
        {
          "name": "target",
          "description": "`target` {`targetType`} - \n\nProperty: target\n\nDefault: _blank",
          "values": [
            {
              "name": "_blank"
            },
            {
              "name": "_parent"
            },
            {
              "name": "_self"
            },
            {
              "name": "_top"
            }
          ]
        },
        {
          "name": "rel",
          "description": "`rel` {`string`} - \n\nProperty: rel"
        },
        {
          "name": "download",
          "description": "`download` {`string`} - \n\nProperty: download"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon"
        }
      ]
    },
    {
      "name": "p-button-group",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ value: string; }>`} - \n\nAttributes:\n\n  * `value` {`string`} - \n\n  * `name` {`string`} - \n\nProperties:\n\n  * `elements` {`NodeListOf<PButton>`} - \n\n  * `value` {`string`} - \n\n  * `name` {`string`} - ",
      "attributes": [
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value"
        },
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ value: string; }>`} - "
        }
      ]
    },
    {
      "name": "p-checkbox",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ value: string; checed: boolean; }>`} - \n\n  * `focus` {`CustomEvent<{ value: string; checked: boolean; }>`} - \n\n  * `blur` {`CustomEvent<{ value: string; checked: boolean; }>`} - \n\nAttributes:\n\n  * `errortips` {`string`} - \n\n  * `value` {`string`} - \n\n  * `name` {`string`} - \n\n  * `novalidate` {`boolean`} - \n\n  * `invalid` {`boolean`} - \n\n  * `checked` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\n  * `required` {`boolean`} - \n\n  * `readonly` {`boolean`} - \n\nProperties:\n\n  * `errortips` {`string`} - \n\n  * `value` {`string`} - \n\n  * `name` {`string`} - \n\n  * `novalidate` {`boolean`} - \n\n  * `invalid` {`boolean`} - \n\n  * `checked` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\n  * `required` {`boolean`} - \n\n  * `readonly` {`boolean`} - \n\n  * `form` {`HTMLFormElement`} - \n\n  * `tip` {`PTips`} - \n\n  * `validity` {`boolean`} - \n\n  * `checkbox` {`HTMLInputElement`} - ",
      "attributes": [
        {
          "name": "errortips",
          "description": "`errortips` {`string`} - \n\nProperty: errortips"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value"
        },
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name"
        },
        {
          "name": "novalidate",
          "description": "`novalidate` {`boolean`} - \n\nProperty: novalidate\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "invalid",
          "description": "`invalid` {`boolean`} - \n\nProperty: invalid\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "checked",
          "description": "`checked` {`boolean`} - \n\nProperty: checked\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "`required` {`boolean`} - \n\nProperty: required\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "readonly",
          "description": "`readonly` {`boolean`} - \n\nProperty: readonly\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ value: string; checed: boolean; }>`} - "
        },
        {
          "name": "onfocus",
          "description": "`focus` {`CustomEvent<{ value: string; checked: boolean; }>`} - "
        },
        {
          "name": "onblur",
          "description": "`blur` {`CustomEvent<{ value: string; checked: boolean; }>`} - "
        }
      ]
    },
    {
      "name": "p-checkbox-group",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ value: String[]; }>`} - \n\nAttributes:\n\n  * `name` {`string`} - \n\n  * `min` {`number`} - \n\n  * `max` {`number`} - \n\n  * `disabled` {`boolean`} - \n\n  * `value` {`String[]`} - \n\n  * `novalidate` {`boolean`} - \n\n  * `invalid` {`boolean`} - \n\n  * `required` {`boolean`} - \n\n  * `vertical` {`boolean`} - \n\n  * `readonly` {`boolean`} - \n\nProperties:\n\n  * `name` {`string`} - \n\n  * `min` {`number`} - \n\n  * `max` {`number`} - \n\n  * `disabled` {`boolean`} - \n\n  * `value` {`String[]`} - \n\n  * `novalidate` {`boolean`} - \n\n  * `invalid` {`boolean`} - \n\n  * `required` {`boolean`} - \n\n  * `vertical` {`boolean`} - \n\n  * `readonly` {`boolean`} - \n\n  * `validity` {`boolean`} - \n\n  * `len` {`number`} - \n\n  * `elements` {`NodeListOf<PCheckbox>`} - \n\n  * `form` {`HTMLFormElement`} - \n\n  * `tip` {`PTips`} - ",
      "attributes": [
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name"
        },
        {
          "name": "min",
          "description": "`min` {`number`} - \n\nProperty: min\n\nDefault: 0"
        },
        {
          "name": "max",
          "description": "`max` {`number`} - \n\nProperty: max\n\nDefault: Infinity"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "`value` {`String[]`} - \n\nProperty: value"
        },
        {
          "name": "novalidate",
          "description": "`novalidate` {`boolean`} - \n\nProperty: novalidate\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "invalid",
          "description": "`invalid` {`boolean`} - \n\nProperty: invalid\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "`required` {`boolean`} - \n\nProperty: required\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "vertical",
          "description": "`vertical` {`boolean`} - \n\nProperty: vertical\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "readonly",
          "description": "`readonly` {`boolean`} - \n\nProperty: readonly\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ value: String[]; }>`} - "
        }
      ]
    },
    {
      "name": "p-color-panel",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ value: string; color: { h: number; s: number; v: number; a: number; toHSVA(): number[]; toHSLA(): number[]; toRGBA(): number[]; toCMYK(): number[]; toHEXA(): string[]; clone: () => ...; }; }>`} - \n\nAttributes:\n\n  * `value` {`string`} - \n\n  * `typeindex` {`number`} - \n\nProperties:\n\n  * `value` {`string`} - \n\n  * `typeindex` {`number`} - \n\n  * `COLOR_TYPE` {`string[]`} - \n\n  * `color` {`{ h: number; s: number; v: number; a: number; toHSVA(): number[]; toHSLA(): number[]; toRGBA(): number[]; toCMYK(): number[]; toHEXA(): string[]; clone: () => ...; }`} - \n\n  * `rgbColor` {`string`} - \n\n  * `palette` {`HTMLElement`} - \n\n  * `_colorSelectStart` {`boolean`} - \n\n  * `copyValue` {`string`} - \n\n  * `rgbaInputs` {`HTMLInputElement[]`} - \n\n  * `hlsaInputs` {`HTMLInputElement[]`} - \n\n  * `rangeHueEL` {`HTMLInputElement`} - \n\n  * `rangeOpcity` {`HTMLInputElement`} - \n\n  * `copyInfoInput` {`HTMLInputElement`} - \n\n  * `color_hexa_input` {`HTMLInputElement`} - \n\n  * `$value` {`any[]`} - ",
      "attributes": [
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value\n\nDefault: #ff0000"
        },
        {
          "name": "typeindex",
          "description": "`typeindex` {`number`} - \n\nProperty: typeindex\n\nDefault: 0"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ value: string; color: { h: number; s: number; v: number; a: number; toHSVA(): number[]; toHSLA(): number[]; toRGBA(): number[]; toCMYK(): number[]; toHEXA(): string[]; clone: () => ...; }; }>`} - "
        }
      ]
    },
    {
      "name": "p-color",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ value: string; }>`} - \n\nAttributes:\n\n  * `disabled` {`boolean`} - \n\n  * `value` {`string`} - \n\n  * `dir` {`string`} - \n\nProperties:\n\n  * `disabled` {`boolean`} - \n\n  * `value` {`string`} - \n\n  * `dir` {`string`} - \n\n  * `colorPane` {`PColorPanel`} - ",
      "attributes": [
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value\n\nDefault: #ff0000"
        },
        {
          "name": "dir",
          "description": "`dir` {`string`} - \n\nProperty: dir\n\nDefault: bottomleft"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ value: string; }>`} - "
        }
      ]
    },
    {
      "name": "p-date-panel",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ value: string; date: Date | null | undefined; }>`} - \n\nAttributes:\n\n  * `type` {`string`} - \n\n  * `value` {`string`} - \n\n  * `range` {`boolean`} - \n\n  * `min` {`string`} - \n\n  * `max` {`string`} - \n\n  * `mode` {`selectMode`} - \n\nProperties:\n\n  * `type` {`string`} - \n\n  * `value` {`string`} - \n\n  * `range` {`boolean`} - \n\n  * `min` {`string`} - \n\n  * `max` {`string`} - \n\n  * `mode` {`selectMode`} - \n\n  * `_initalDated` {`boolean`} - \n\n  * `renderHeaderStr` {`string`} - \n\n  * `_dateType` {`selectDateType`} - \n\n  * `_dateYear` {`number`} - \n\n  * `_dateMonth` {`number`} - \n\n  * `_prevButton` {`PButton`} - \n\n  * `_nextButton` {`PButton`} - \n\n  * `dateValue` {`Date | null | undefined`} - \n\n  * `defaultDateValue` {`Date`} - \n\n  * `maxDate` {`Date | null | undefined`} - \n\n  * `minDate` {`Date | null | undefined`} - ",
      "attributes": [
        {
          "name": "type",
          "description": "`type` {`string`} - \n\nProperty: type"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value\n\nDefault: "
        },
        {
          "name": "range",
          "description": "`range` {`boolean`} - \n\nProperty: range",
          "valueSet": "v"
        },
        {
          "name": "min",
          "description": "`min` {`string`} - \n\nProperty: min"
        },
        {
          "name": "max",
          "description": "`max` {`string`} - \n\nProperty: max"
        },
        {
          "name": "mode",
          "description": "`mode` {`selectMode`} - \n\nProperty: mode\n\nDefault: date",
          "values": [
            {
              "name": "date"
            },
            {
              "name": "month"
            },
            {
              "name": "year"
            }
          ]
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ value: string; date: Date | null | undefined; }>`} - "
        }
      ]
    },
    {
      "name": "p-dialog",
      "description": "Events:\n\n  * `submit` {`CustomEvent<unknown>`} - \n\n  * `cancel` {`CustomEvent<unknown>`} - \n\n  * `close` {`CustomEvent<unknown>`} - \n\nAttributes:\n\n  * `open` {`boolean`} - \n\n  * `removeAble` {`boolean`} - \n\n  * `autoclose` {`boolean`} - \n\n  * `loading` {`boolean`} - \n\n  * `p-title` {`string`} - \n\n  * `type` {`DialogType`} - \n\n  * `okText` {`string`} - \n\n  * `showCancelBtn` {`boolean`} - \n\n  * `cancelText` {`string`} - \n\nProperties:\n\n  * `open` {`boolean`} - \n\n  * `removeAble` {`boolean`} - \n\n  * `autoclose` {`boolean`} - \n\n  * `loading` {`boolean`} - \n\n  * `title` {`string`} - \n\n  * `type` {`DialogType`} - \n\n  * `okText` {`string`} - \n\n  * `showCancelBtn` {`boolean`} - \n\n  * `cancelText` {`string`} - \n\n  * `cancelBtn` {`PButton`} - \n\n  * `submitBtn` {`PButton`} - \n\n  * `btnActive` {`HTMLElement`} - \n\n  * `alert` - \n\n  * `info` - \n\n  * `success` - \n\n  * `error` - \n\n  * `warning` - \n\n  * `confirm` - \n\n  * `prompt` - ",
      "attributes": [
        {
          "name": "open",
          "description": "`open` {`boolean`} - \n\nProperty: open\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "removeAble",
          "description": "`removeAble` {`boolean`} - \n\nProperty: removeAble\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "autoclose",
          "description": "`autoclose` {`boolean`} - \n\nProperty: autoclose\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "loading",
          "description": "`loading` {`boolean`} - \n\nProperty: loading\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "p-title",
          "description": "`p-title` {`string`} - \n\nProperty: title\n\nDefault: undefined"
        },
        {
          "name": "type",
          "description": "`type` {`DialogType`} - \n\nProperty: type",
          "values": [
            {
              "name": "dialog"
            },
            {
              "name": "success"
            },
            {
              "name": "warning"
            },
            {
              "name": "error"
            },
            {
              "name": "Alert"
            },
            {
              "name": "info"
            },
            {
              "name": "confirm"
            },
            {
              "name": "prompt"
            }
          ]
        },
        {
          "name": "okText",
          "description": "`okText` {`string`} - \n\nProperty: okText\n\nDefault: undefined"
        },
        {
          "name": "showCancelBtn",
          "description": "`showCancelBtn` {`boolean`} - \n\nProperty: showCancelBtn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "cancelText",
          "description": "`cancelText` {`string`} - \n\nProperty: cancelText\n\nDefault: undefined"
        },
        {
          "name": "onsubmit",
          "description": "`submit` {`CustomEvent<unknown>`} - "
        },
        {
          "name": "oncancel",
          "description": "`cancel` {`CustomEvent<unknown>`} - "
        },
        {
          "name": "onclose",
          "description": "`close` {`CustomEvent<unknown>`} - "
        }
      ]
    },
    {
      "name": "p-fieldset",
      "description": "panel 容器\n\nEvents:\n\n  * `before-fieldset` {} - collpase 如果能关闭，点击header 触发\n\n  * `fieldset` {} - collpase 内容关闭、开启后触发\n\n  * `before-fieldset-collpase` {`CustomEvent<{ collapse: boolean; }>`} - \n\n  * `fieldset-collpase` {`CustomEvent<{ collapse: boolean; }>`} - \n\nSlots:\n\n  * ` ` {} - header header 分发区\n\nAttributes:\n\n  * `toogleable` {`boolean`} - \n\n  * `collapsed` {`boolean`} - \n\n  * `header` {`string`} - \n\nProperties:\n\n  * `toogleable` {`boolean`} - \n\n  * `collapsed` {`boolean`} - \n\n  * `header` {`string`} - \n\n  * `styles` {`CSSResult`} - ",
      "attributes": [
        {
          "name": "toogleable",
          "description": "`toogleable` {`boolean`} - \n\nProperty: toogleable\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "collapsed",
          "description": "`collapsed` {`boolean`} - \n\nProperty: collapsed",
          "valueSet": "v"
        },
        {
          "name": "header",
          "description": "`header` {`string`} - \n\nProperty: header"
        },
        {
          "name": "onbefore-fieldset",
          "description": "`before-fieldset` {} - collpase 如果能关闭，点击header 触发"
        },
        {
          "name": "onfieldset",
          "description": "`fieldset` {} - collpase 内容关闭、开启后触发"
        },
        {
          "name": "onbefore-fieldset-collpase",
          "description": "`before-fieldset-collpase` {`CustomEvent<{ collapse: boolean; }>`} - "
        },
        {
          "name": "onfieldset-collpase",
          "description": "`fieldset-collpase` {`CustomEvent<{ collapse: boolean; }>`} - "
        }
      ]
    },
    {
      "name": "p-for",
      "description": "Attributes:\n\n  * `value` {`string`} - \n\n  * `index` {`string`} - \n\nProperties:\n\n  * `items` {`Object[]`} - \n\n  * `value` {`string`} - \n\n  * `index` {`string`} - \n\n  * `styles` {`CSSResult`} - \n\n  * `templateHTML` {`string`} - ",
      "attributes": [
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value\n\nDefault: value"
        },
        {
          "name": "index",
          "description": "`index` {`string`} - \n\nProperty: index\n\nDefault: index"
        }
      ]
    },
    {
      "name": "p-icon",
      "description": "Attributes:\n\n  * `view` {`number`} - \n\n  * `name` {`string`} - \n\n  * `iconPath` {`string`} - \n\n  * `path` {`string`} - \n\n  * `size` {`number`} - \n\n  * `color` {`string`} - \n\n  * `spin` {`boolean`} - \n\nProperties:\n\n  * `view` {`number`} - \n\n  * `name` {`string`} - \n\n  * `iconPath` {`string`} - \n\n  * `path` {`string`} - \n\n  * `size` {`number`} - \n\n  * `color` {`string`} - \n\n  * `spin` {`boolean`} - \n\n  * `styles` {`CSSResult`} - ",
      "attributes": [
        {
          "name": "view",
          "description": "`view` {`number`} - \n\nProperty: view\n\nDefault: 1024"
        },
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name\n\nDefault: "
        },
        {
          "name": "iconPath",
          "description": "`iconPath` {`string`} - \n\nProperty: iconPath\n\nDefault: ./iconfont/icon.svg"
        },
        {
          "name": "path",
          "description": "`path` {`string`} - \n\nProperty: path\n\nDefault: "
        },
        {
          "name": "size",
          "description": "`size` {`number`} - \n\nProperty: size\n\nDefault: -1"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - \n\nProperty: color\n\nDefault: "
        },
        {
          "name": "spin",
          "description": "`spin` {`boolean`} - \n\nProperty: spin\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "p-input",
      "description": "Events:\n\n  * `submit` {`CustomEvent<{ value: string | undefined; }>`} - \n\n  * `change` {`CustomEvent<{ value: string; }>`} - \n\n  * `focus` {`CustomEvent<{ value: string; }>`} - \n\n  * `input` {`CustomEvent<{ value: string; }>`} - \n\nAttributes:\n\n  * `label` {`string | undefined`} - \n\n  * `tips` {`string`} - \n\n  * `errortips` {`string | undefined`} - \n\n  * `disabled` {`boolean | undefined`} - \n\n  * `readOnly` {`boolean | undefined`} - \n\n  * `type` {`inputtype`} - \n\n  * `placeholder` {`string`} - \n\n  * `leftIcon` {`string | undefined`} - \n\n  * `rightIcon` {`string | undefined`} - \n\n  * `block` {`boolean | undefined`} - \n\n  * `clear` {`boolean | undefined`} - \n\n  * `debounce` {`number | undefined`} - \n\n  * `throttle` {`number | undefined`} - \n\n  * `showStep` {`boolean | undefined`} - \n\n  * `name` {`string | undefined`} - \n\n  * `value` {`string | undefined`} - \n\n  * `invalid` {`boolean | undefined`} - \n\n  * `novalidate` {`boolean | undefined`} - \n\n  * `required` {`boolean | undefined`} - \n\n  * `errorMessage` {`string | undefined`} - \n\n  * `pattern` {`string | undefined`} - \n\n  * `minLength` {`number | undefined`} - \n\n  * `maxLength` {`number | undefined`} - \n\n  * `min` {`number | undefined`} - \n\n  * `max` {`number | undefined`} - \n\n  * `step` {`number | undefined`} - \n\nProperties:\n\n  * `label` {`string | undefined`} - \n\n  * `tips` {`string`} - \n\n  * `errortips` {`string | undefined`} - \n\n  * `disabled` {`boolean | undefined`} - \n\n  * `readOnly` {`boolean | undefined`} - \n\n  * `type` {`inputtype`} - \n\n  * `placeholder` {`string`} - \n\n  * `leftIcon` {`string | undefined`} - \n\n  * `rightIcon` {`string | undefined`} - \n\n  * `block` {`boolean | undefined`} - \n\n  * `clear` {`boolean | undefined`} - \n\n  * `debounce` {`number | undefined`} - \n\n  * `throttle` {`number | undefined`} - \n\n  * `showStep` {`boolean | undefined`} - \n\n  * `form` {`HTMLFormElement`} - \n\n  * `NUMBERINPUTARRAY` {`string[]`} - \n\n  * `pTipCon` {`PTips`} - \n\n  * `firstTypePassword` {`boolean`} - \n\n  * `input` {`HTMLInputElement`} - \n\n  * `name` {`string | undefined`} - \n\n  * `value` {`string | undefined`} - \n\n  * `invalid` {`boolean | undefined`} - \n\n  * `novalidate` {`boolean | undefined`} - \n\n  * `required` {`boolean | undefined`} - \n\n  * `errorMessage` {`string | undefined`} - \n\n  * `pattern` {`string | undefined`} - \n\n  * `minLength` {`number | undefined`} - \n\n  * `maxLength` {`number | undefined`} - \n\n  * `min` {`number | undefined`} - \n\n  * `max` {`number | undefined`} - \n\n  * `step` {`number | undefined`} - \n\n  * `customValidateMethod` - \n\n  * `validity` {`boolean`} - \n\n  * `validationMessage` {`string`} - ",
      "attributes": [
        {
          "name": "label",
          "description": "`label` {`string | undefined`} - \n\nProperty: label",
          "values": []
        },
        {
          "name": "tips",
          "description": "`tips` {`string`} - \n\nProperty: tips"
        },
        {
          "name": "errortips",
          "description": "`errortips` {`string | undefined`} - \n\nProperty: errortips",
          "values": []
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean | undefined`} - \n\nProperty: disabled\n\nDefault: false",
          "values": []
        },
        {
          "name": "readOnly",
          "description": "`readOnly` {`boolean | undefined`} - \n\nProperty: readOnly\n\nDefault: false",
          "values": []
        },
        {
          "name": "type",
          "description": "`type` {`inputtype`} - \n\nProperty: type\n\nDefault: text",
          "values": [
            {
              "name": "number"
            },
            {
              "name": "text"
            },
            {
              "name": "password"
            },
            {
              "name": "email"
            },
            {
              "name": "url"
            },
            {
              "name": "tel"
            },
            {
              "name": "search"
            }
          ]
        },
        {
          "name": "placeholder",
          "description": "`placeholder` {`string`} - \n\nProperty: placeholder"
        },
        {
          "name": "leftIcon",
          "description": "`leftIcon` {`string | undefined`} - \n\nProperty: leftIcon",
          "values": []
        },
        {
          "name": "rightIcon",
          "description": "`rightIcon` {`string | undefined`} - \n\nProperty: rightIcon",
          "values": []
        },
        {
          "name": "block",
          "description": "`block` {`boolean | undefined`} - \n\nProperty: block\n\nDefault: false",
          "values": []
        },
        {
          "name": "clear",
          "description": "`clear` {`boolean | undefined`} - \n\nProperty: clear\n\nDefault: false",
          "values": []
        },
        {
          "name": "debounce",
          "description": "`debounce` {`number | undefined`} - \n\nProperty: debounce\n\nDefault: undefined",
          "values": []
        },
        {
          "name": "throttle",
          "description": "`throttle` {`number | undefined`} - \n\nProperty: throttle\n\nDefault: undefined",
          "values": []
        },
        {
          "name": "showStep",
          "description": "`showStep` {`boolean | undefined`} - \n\nProperty: showStep\n\nDefault: false",
          "values": []
        },
        {
          "name": "name",
          "description": "`name` {`string | undefined`} - \n\nProperty: name",
          "values": []
        },
        {
          "name": "value",
          "description": "`value` {`string | undefined`} - \n\nProperty: value\n\nDefault: ",
          "values": []
        },
        {
          "name": "invalid",
          "description": "`invalid` {`boolean | undefined`} - \n\nProperty: invalid\n\nDefault: false",
          "values": []
        },
        {
          "name": "novalidate",
          "description": "`novalidate` {`boolean | undefined`} - \n\nProperty: novalidate\n\nDefault: false",
          "values": []
        },
        {
          "name": "required",
          "description": "`required` {`boolean | undefined`} - \n\nProperty: required\n\nDefault: false",
          "values": []
        },
        {
          "name": "errorMessage",
          "description": "`errorMessage` {`string | undefined`} - \n\nProperty: errorMessage\n\nDefault: undefined",
          "values": []
        },
        {
          "name": "pattern",
          "description": "`pattern` {`string | undefined`} - \n\nProperty: pattern\n\nDefault: undefined",
          "values": []
        },
        {
          "name": "minLength",
          "description": "`minLength` {`number | undefined`} - \n\nProperty: minLength\n\nDefault: undefined",
          "values": []
        },
        {
          "name": "maxLength",
          "description": "`maxLength` {`number | undefined`} - \n\nProperty: maxLength\n\nDefault: undefined",
          "values": []
        },
        {
          "name": "min",
          "description": "`min` {`number | undefined`} - \n\nProperty: min\n\nDefault: undefined",
          "values": []
        },
        {
          "name": "max",
          "description": "`max` {`number | undefined`} - \n\nProperty: max\n\nDefault: undefined",
          "values": []
        },
        {
          "name": "step",
          "description": "`step` {`number | undefined`} - \n\nProperty: step\n\nDefault: 1",
          "values": []
        },
        {
          "name": "onsubmit",
          "description": "`submit` {`CustomEvent<{ value: string | undefined; }>`} - "
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ value: string; }>`} - "
        },
        {
          "name": "onfocus",
          "description": "`focus` {`CustomEvent<{ value: string; }>`} - "
        },
        {
          "name": "oninput",
          "description": "`input` {`CustomEvent<{ value: string; }>`} - "
        }
      ]
    },
    {
      "name": "p-row",
      "description": "Attributes:\n\n  * `grap` {`number`} - \n\n  * `column` {`number`} - \n\nProperties:\n\n  * `grap` {`number`} - \n\n  * `column` {`number`} - \n\n  * `styles` {`CSSResult`} - ",
      "attributes": [
        {
          "name": "grap",
          "description": "`grap` {`number`} - \n\nProperty: grap\n\nDefault: 0"
        },
        {
          "name": "column",
          "description": "`column` {`number`} - \n\nProperty: column\n\nDefault: 24"
        }
      ]
    },
    {
      "name": "p-col",
      "description": "Attributes:\n\n  * `span` {`number`} - \n\nProperties:\n\n  * `span` {`number`} - ",
      "attributes": [
        {
          "name": "span",
          "description": "`span` {`number`} - \n\nProperty: span\n\nDefault: 1"
        }
      ]
    },
    {
      "name": "p-layout",
      "description": "Attributes:\n\n  * `row` {`boolean`} - \n\n  * `expand` {`boolean`} - \n\n  * `center` {`boolean`} - \n\n  * `mainAgile` {`layAgileType`} - \n\n  * `crossAgile` {`layAgileType`} - \n\nProperties:\n\n  * `row` {`boolean`} - \n\n  * `expand` {`boolean`} - \n\n  * `center` {`boolean`} - \n\n  * `mainAgile` {`layAgileType`} - \n\n  * `crossAgile` {`layAgileType`} - ",
      "attributes": [
        {
          "name": "row",
          "description": "`row` {`boolean`} - \n\nProperty: row",
          "valueSet": "v"
        },
        {
          "name": "expand",
          "description": "`expand` {`boolean`} - \n\nProperty: expand",
          "valueSet": "v"
        },
        {
          "name": "center",
          "description": "`center` {`boolean`} - \n\nProperty: center",
          "valueSet": "v"
        },
        {
          "name": "mainAgile",
          "description": "`mainAgile` {`layAgileType`} - \n\nProperty: mainAgile",
          "values": [
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "center"
            }
          ]
        },
        {
          "name": "crossAgile",
          "description": "`crossAgile` {`layAgileType`} - \n\nProperty: crossAgile",
          "values": [
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "center"
            }
          ]
        }
      ]
    },
    {
      "name": "p-loading",
      "description": "Attributes:\n\n  * `size` {`string`} - \n\n  * `color` {`string`} - \n\nProperties:\n\n  * `size` {`string`} - \n\n  * `color` {`string`} - \n\n  * `loadingEl` {`HTMLElement | null`} - ",
      "attributes": [
        {
          "name": "size",
          "description": "`size` {`string`} - \n\nProperty: size"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - \n\nProperty: color"
        }
      ]
    },
    {
      "name": "p-menu",
      "description": "Attributes:\n\n  * `overlay` {`boolean`} - 定义是 static 还是动态触发位置的mneu\n\n  * `trigger` {`string`} - 如果是动态触发的，触发元素选择器\n\n  * `trigger-event` {`string`} - 如果是动态触发的，\n\nProperties:\n\n  * `overlay` {`boolean`} - 定义是 static 还是动态触发位置的mneu\n\n  * `trigger` {`string`} - 如果是动态触发的，触发元素选择器\n\n  * `triggerEvent` {`string`} - 如果是动态触发的，",
      "attributes": [
        {
          "name": "overlay",
          "description": "`overlay` {`boolean`} - 定义是 static 还是动态触发位置的mneu\n\nProperty: overlay\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "trigger",
          "description": "`trigger` {`string`} - 如果是动态触发的，触发元素选择器\n\nProperty: trigger\n\nDefault: undefined"
        },
        {
          "name": "trigger-event",
          "description": "`trigger-event` {`string`} - 如果是动态触发的，\n\nProperty: triggerEvent\n\nDefault: undefined"
        }
      ]
    },
    {
      "name": "p-menuitem",
      "description": "Attributes:\n\n  * `label` {`string`} - 如果是动态触发的，触发元素选择器\n\n  * `disable` {`Boolean`} - 是否 禁用\n\n  * `value` {`string`} - 点击事件 传值\n\n  * `icon` {`string`} - 菜单图标\n\n  * `href` {`string`} - 点击url\n\nProperties:\n\n  * `label` {`string`} - 如果是动态触发的，触发元素选择器\n\n  * `disable` {`Boolean`} - 是否 禁用\n\n  * `value` {`string`} - 点击事件 传值\n\n  * `icon` {`string`} - 菜单图标\n\n  * `href` {`string`} - 点击url",
      "attributes": [
        {
          "name": "label",
          "description": "`label` {`string`} - 如果是动态触发的，触发元素选择器\n\nProperty: label\n\nDefault: undefined"
        },
        {
          "name": "disable",
          "description": "`disable` {`Boolean`} - 是否 禁用\n\nProperty: disable\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - 点击事件 传值\n\nProperty: value\n\nDefault: undefined"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - 菜单图标\n\nProperty: icon\n\nDefault: undefined"
        },
        {
          "name": "href",
          "description": "`href` {`string`} - 点击url\n\nProperty: href\n\nDefault: undefined"
        }
      ]
    },
    {
      "name": "p-message",
      "description": "Attributes:\n\n  * `block` {`boolean`} - \n\n  * `icon` {`string`} - \n\n  * `color` {`string`} - \n\n  * `horizontal-agile` {`string`} - \n\n  * `show` {`boolean`} - \n\n  * `loading` {`boolean`} - \n\nProperties:\n\n  * `block` {`boolean`} - \n\n  * `icon` {`string`} - \n\n  * `color` {`string`} - \n\n  * `hAgile` {`string`} - \n\n  * `styles` {`CSSResult`} - \n\n  * `zIndex` {`number`} - \n\n  * `DEFAULTPOSTION` {`positionType`} - \n\n  * `postionMap` {`{ topcenter: string; topleft: string; topright: string; bottomcenter: string; bottomleft: string; bottomright: string; }`} - \n\n  * `_getMessagePositionDIV` - \n\n  * `show` {`boolean`} - \n\n  * `info` - \n\n  * `error` - \n\n  * `success` - \n\n  * `warning` - \n\n  * `loading` {`boolean`} - ",
      "attributes": [
        {
          "name": "block",
          "description": "`block` {`boolean`} - \n\nProperty: block",
          "valueSet": "v"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - \n\nProperty: color"
        },
        {
          "name": "horizontal-agile",
          "description": "`horizontal-agile` {`string`} - \n\nProperty: hAgile"
        },
        {
          "name": "show",
          "description": "`show` {`boolean`} - \n\nProperty: show\n\nDefault: (config: MessageType) => {\r\n        if (config.position === undefined) {\r\n            config.position = PMessage.DEFAULTPOSTION;\r\n        }\r\n        const div = PMessage._getMessagePositionDIV(config.position);\r\n        const message: PMessage = new PMessage();\r\n        if (config.icon) {\r\n            message.icon = config.icon;\r\n        }\r\n        if (config.color) {\r\n            message.color = config.color;\r\n        }\r\n        if (config.loading !== undefined) {\r\n            message.loading = config.loading;\r\n        }\r\n        if (config.position.indexOf('left') >= 0) {\r\n            message.hAgile = 'left';\r\n        } else if (config.position.indexOf('right') >= 0) {\r\n            message.hAgile = 'right';\r\n        } else {\r\n            message.hAgile = 'center';\r\n        }\r\n        div.appendChild(message);\r\n        message.textContent = config.text;\r\n        message.show = true;\r\n        let timer: number = undefined;\r\n        if (config.duration && config.duration > 0) {\r\n            timer = window.setTimeout(() => {\r\n                message.show = false;\r\n                config.onclose && config.onclose;\r\n                message.parentElement.removeChild(message);\r\n            }, config.duration);\r\n        }\r\n        return message;\r\n    }",
          "valueSet": "v"
        },
        {
          "name": "loading",
          "description": "`loading` {`boolean`} - \n\nProperty: loading\n\nDefault: (text?: string | MessageType, duration: number = -1, onclose?: Function) => {\r\n        const defaultInfoConfig: MessageType = { position: PMessage.DEFAULTPOSTION, duration: -1, loading: true };\r\n        return PMessage._mergerConfig(defaultInfoConfig, text, duration, onclose);\r\n    }",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "p-page-btn",
      "description": "Events:\n\n  * `page-change` {`CustomEvent<{ current: number; pagesize: number; total: number; }>`} - \n\n  * `before-page-change` {`CustomEvent<{ current: number; toPage: number; pagesize: number; total: number; }>`} - \n\nAttributes:\n\n  * `value` {`number`} - \n\n  * `pagesize` {`number`} - \n\n  * `simple` {`boolean`} - \n\n  * `total` {`number`} - \n\nProperties:\n\n  * `value` {`number`} - \n\n  * `pagesize` {`number`} - \n\n  * `simple` {`boolean`} - \n\n  * `total` {`number`} - \n\n  * `pageCount` {`number`} - ",
      "attributes": [
        {
          "name": "value",
          "description": "`value` {`number`} - \n\nProperty: value\n\nDefault: 1"
        },
        {
          "name": "pagesize",
          "description": "`pagesize` {`number`} - \n\nProperty: pagesize\n\nDefault: 20"
        },
        {
          "name": "simple",
          "description": "`simple` {`boolean`} - \n\nProperty: simple\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "total",
          "description": "`total` {`number`} - \n\nProperty: total\n\nDefault: undefined"
        },
        {
          "name": "onpage-change",
          "description": "`page-change` {`CustomEvent<{ current: number; pagesize: number; total: number; }>`} - "
        },
        {
          "name": "onbefore-page-change",
          "description": "`before-page-change` {`CustomEvent<{ current: number; toPage: number; pagesize: number; total: number; }>`} - "
        }
      ]
    },
    {
      "name": "p-panel",
      "description": "panel 容器\n\nEvents:\n\n  * `before-panel` {} - collpase 如果能关闭，点击header 触发\n\n  * `panel` {} - collpase 内容关闭、开启后触发\n\n  * `before-panel-collpase` {`CustomEvent<{ collapse: boolean; }>`} - \n\n  * `panel-collpase` {`CustomEvent<{ collapse: boolean; }>`} - \n\nSlots:\n\n  * ` ` {} - header 头部分发区\n\nAttributes:\n\n  * `toogleable` {`boolean`} - \n\n  * `collapsed` {`boolean`} - \n\n  * `header` {`string`} - \n\nProperties:\n\n  * `toogleable` {`boolean`} - \n\n  * `collapsed` {`boolean`} - \n\n  * `header` {`string`} - \n\n  * `styles` {`CSSResult`} - ",
      "attributes": [
        {
          "name": "toogleable",
          "description": "`toogleable` {`boolean`} - \n\nProperty: toogleable\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "collapsed",
          "description": "`collapsed` {`boolean`} - \n\nProperty: collapsed",
          "valueSet": "v"
        },
        {
          "name": "header",
          "description": "`header` {`string`} - \n\nProperty: header"
        },
        {
          "name": "onbefore-panel",
          "description": "`before-panel` {} - collpase 如果能关闭，点击header 触发"
        },
        {
          "name": "onpanel",
          "description": "`panel` {} - collpase 内容关闭、开启后触发"
        },
        {
          "name": "onbefore-panel-collpase",
          "description": "`before-panel-collpase` {`CustomEvent<{ collapse: boolean; }>`} - "
        },
        {
          "name": "onpanel-collpase",
          "description": "`panel-collpase` {`CustomEvent<{ collapse: boolean; }>`} - "
        }
      ]
    },
    {
      "name": "p-pop",
      "description": "Attributes:\n\n  * `disabled` {`boolean`} - \n\n  * `type` {`string`} - \n\n  * `tipContent` {`string`} - \n\n  * `tipTitle` {`string`} - \n\n  * `okText` {`string`} - \n\n  * `cancelText` {`string`} - \n\n  * `trigger` {`string`} - \n\n  * `accomplish` {`boolean`} - \n\nProperties:\n\n  * `disabled` {`boolean`} - \n\n  * `type` {`string`} - \n\n  * `tipContent` {`string`} - \n\n  * `tipTitle` {`string`} - \n\n  * `okText` {`string`} - \n\n  * `cancelText` {`string`} - \n\n  * `trigger` {`string`} - \n\n  * `accomplish` {`boolean`} - \n\n  * `popContent` {`PPopContent`} - \n\n  * `_bindShowHanlder` - \n\n  * `_bindHiddenHanlder` - \n\n  * `_bindDocumentAutoHidde` - \n\n  * `firstUpdateFlag` {`boolean`} - ",
      "attributes": [
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "type",
          "description": "`type` {`string`} - \n\nProperty: type\n\nDefault: undefined"
        },
        {
          "name": "tipContent",
          "description": "`tipContent` {`string`} - \n\nProperty: tipContent\n\nDefault: undefined"
        },
        {
          "name": "tipTitle",
          "description": "`tipTitle` {`string`} - \n\nProperty: tipTitle\n\nDefault: undefined"
        },
        {
          "name": "okText",
          "description": "`okText` {`string`} - \n\nProperty: okText\n\nDefault: undefined"
        },
        {
          "name": "cancelText",
          "description": "`cancelText` {`string`} - \n\nProperty: cancelText\n\nDefault: undefined"
        },
        {
          "name": "trigger",
          "description": "`trigger` {`string`} - \n\nProperty: trigger\n\nDefault: click"
        },
        {
          "name": "accomplish",
          "description": "`accomplish` {`boolean`} - \n\nProperty: accomplish\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "p-pop-content",
      "description": "Events:\n\n  * `close` {`CustomEvent<unknown>`} - \n\n  * `cancel` {`CustomEvent<unknown>`} - \n\n  * `submit` {`CustomEvent<unknown>`} - \n\n  * `open` {`CustomEvent<unknown>`} - \n\nAttributes:\n\n  * `open` {`boolean`} - \n\n  * `loading` {`boolean`} - \n\n  * `thinBar` {`boolean`} - \n\n  * `hiddenClose` {`boolean`} - \n\n  * `type` {`string`} - \n\n  * `tip-title` {`string`} - \n\n  * `tip-title-icon` {`string`} - \n\n  * `okText` {`string`} - \n\n  * `cancelText` {`string`} - \n\nProperties:\n\n  * `open` {`boolean`} - \n\n  * `loading` {`boolean`} - \n\n  * `thinBar` {`boolean`} - \n\n  * `hiddenClose` {`boolean`} - \n\n  * `type` {`string`} - \n\n  * `tipTitle` {`string`} - \n\n  * `tipTitleIcon` {`string`} - \n\n  * `okText` {`string`} - \n\n  * `cancelText` {`string`} - ",
      "attributes": [
        {
          "name": "open",
          "description": "`open` {`boolean`} - \n\nProperty: open\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "loading",
          "description": "`loading` {`boolean`} - \n\nProperty: loading\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "thinBar",
          "description": "`thinBar` {`boolean`} - \n\nProperty: thinBar\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hiddenClose",
          "description": "`hiddenClose` {`boolean`} - \n\nProperty: hiddenClose\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "type",
          "description": "`type` {`string`} - \n\nProperty: type\n\nDefault: undefined"
        },
        {
          "name": "tip-title",
          "description": "`tip-title` {`string`} - \n\nProperty: tipTitle\n\nDefault: undefined"
        },
        {
          "name": "tip-title-icon",
          "description": "`tip-title-icon` {`string`} - \n\nProperty: tipTitleIcon\n\nDefault: undefined"
        },
        {
          "name": "okText",
          "description": "`okText` {`string`} - \n\nProperty: okText\n\nDefault: undefined"
        },
        {
          "name": "cancelText",
          "description": "`cancelText` {`string`} - \n\nProperty: cancelText\n\nDefault: undefined"
        },
        {
          "name": "onclose",
          "description": "`close` {`CustomEvent<unknown>`} - "
        },
        {
          "name": "oncancel",
          "description": "`cancel` {`CustomEvent<unknown>`} - "
        },
        {
          "name": "onsubmit",
          "description": "`submit` {`CustomEvent<unknown>`} - "
        },
        {
          "name": "onopen",
          "description": "`open` {`CustomEvent<unknown>`} - "
        }
      ]
    },
    {
      "name": "p-radio",
      "description": "Events:\n\n  * `tab-change` {} - end 页签改变完成事件\n\n  * `change` {`CustomEvent<{ checked: boolean; }>`} - \n\nAttributes:\n\n  * `value` {`string`} - \n\n  * `name` {`string`} - \n\n  * `checked` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\nProperties:\n\n  * `value` {`string`} - \n\n  * `name` {`string`} - \n\n  * `checked` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\n  * `group` {`Element | null`} - \n\n  * `radio` {`HTMLInputElement`} - \n\n  * `form` {`HTMLFormElement`} - ",
      "attributes": [
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value"
        },
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name"
        },
        {
          "name": "checked",
          "description": "`checked` {`boolean`} - \n\nProperty: checked\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "ontab-change",
          "description": "`tab-change` {} - end 页签改变完成事件"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ checked: boolean; }>`} - "
        }
      ]
    },
    {
      "name": "p-radio-group",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ value: string; }>`} - \n\nAttributes:\n\n  * `name` {`string`} - \n\n  * `value` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `novalidate` {`boolean`} - \n\n  * `invalid` {`boolean`} - \n\n  * `required` {`boolean`} - \n\nProperties:\n\n  * `name` {`string`} - \n\n  * `value` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `novalidate` {`boolean`} - \n\n  * `invalid` {`boolean`} - \n\n  * `required` {`boolean`} - \n\n  * `validity` {`boolean`} - \n\n  * `elements` {`NodeListOf<PRadio>`} - \n\n  * `form` {`HTMLFormElement`} - \n\n  * `tip` {`PTips`} - ",
      "attributes": [
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "novalidate",
          "description": "`novalidate` {`boolean`} - \n\nProperty: novalidate\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "invalid",
          "description": "`invalid` {`boolean`} - \n\nProperty: invalid\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "`required` {`boolean`} - \n\nProperty: required\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ value: string; }>`} - "
        }
      ]
    },
    {
      "name": "p-rate",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ old: number; value: number; }>`} - \n\nAttributes:\n\n  * `disabled` {`boolean`} - \n\n  * `icon` {`string`} - \n\n  * `onColor` {`string`} - \n\n  * `offColor` {`string`} - \n\n  * `hoverable` {`boolean`} - \n\n  * `size` {`number`} - \n\n  * `number` {`number`} - \n\n  * `name` {`string`} - \n\n  * `value` {`number`} - \n\n  * `tipStrings` {`string[]`} - \n\nProperties:\n\n  * `disabled` {`boolean`} - \n\n  * `icon` {`string`} - \n\n  * `onColor` {`string`} - \n\n  * `offColor` {`string`} - \n\n  * `hoverable` {`boolean`} - \n\n  * `size` {`number`} - \n\n  * `number` {`number`} - \n\n  * `name` {`string`} - \n\n  * `value` {`number`} - \n\n  * `tipStrings` {`string[]`} - ",
      "attributes": [
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: star-fill"
        },
        {
          "name": "onColor",
          "description": "`onColor` {`string`} - \n\nProperty: onColor\n\nDefault: undefined"
        },
        {
          "name": "offColor",
          "description": "`offColor` {`string`} - \n\nProperty: offColor\n\nDefault: undefined"
        },
        {
          "name": "hoverable",
          "description": "`hoverable` {`boolean`} - \n\nProperty: hoverable\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "`size` {`number`} - \n\nProperty: size\n\nDefault: undefined"
        },
        {
          "name": "number",
          "description": "`number` {`number`} - \n\nProperty: number\n\nDefault: 5"
        },
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name\n\nDefault: undefined"
        },
        {
          "name": "value",
          "description": "`value` {`number`} - \n\nProperty: value\n\nDefault: 0"
        },
        {
          "name": "tipStrings",
          "description": "`tipStrings` {`string[]`} - \n\nProperty: tipStrings\n\nDefault: undefined"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ old: number; value: number; }>`} - "
        }
      ]
    },
    {
      "name": "p-router-slot",
      "description": "Attributes:\n\n  * `route` {`string`} - \n\nProperties:\n\n  * `route` {`string`} - \n\n  * `slotElement` {`HTMLElement | null`} - ",
      "attributes": [
        {
          "name": "route",
          "description": "`route` {`string`} - \n\nProperty: route"
        }
      ]
    },
    {
      "name": "p-scroll",
      "description": "滚动容器\n\nEvents:\n\n  * `resize` {`CustomEvent<unknown>`} - resize事件，当容器或者子孩子放生变化，此时触发\n\n  * `scroll-change` {`CustomEvent<{ scrollTop: number; scrollLeft: number; }>`} - 滚动事件，detail scrollTop,detail scrollLeft 说明内容滚动位置,\n\n  * `scroll-y-end` {`CustomEvent<{ value: number; }>`} - 竖直滚动到底部时触发，detail.value,内容滚动高度\n\n  * `scroll-y` {`CustomEvent<{ value: number; oldValue: number; }>`} - 竖直滚动的时触发, detail.value,内容滚动高度 detail.oldvalue,原来内容滚动高度\n\n  * `scroll-x-end` {`CustomEvent<{ value: number; }>`} - 水平滚动到最右侧触发      * detail.value 内容水平滚动大小\n\n  * `scroll-x` {`CustomEvent<{ value: number; oldValue: number; }>`} - 水平滚动时触发 detail.value 内容区水平滚动大小 detail.oldValue 原始内容区水平滚动大小\n\nSlots:\n\n  * `内容slot` {} - \n\nAttributes:\n\n  * `overflow-x` {`string`} - hidden,则水平滚动条永远隐藏，否则根据内容自动显示隐藏\n\n  * `overflow-y` {`string`} - hidden,则竖直滚动条隐藏，，否则根据内容自动显示隐藏\n\n  * `keyEnable` {`boolean`} - 是否允许 键盘 上下左右按键滚动\n\n  * `scroll-bar-width` {`number`} - 滚动条宽度\n\n  * `scroll-bar-out-width` {`number`} - 滚动条 容器宽度，必须大与 滚动条宽度\n\nProperties:\n\n  * `overflowX` {`string`} - hidden,则水平滚动条永远隐藏，否则根据内容自动显示隐藏\n\n  * `overflowY` {`string`} - hidden,则竖直滚动条隐藏，，否则根据内容自动显示隐藏\n\n  * `keyEnable` {`boolean`} - 是否允许 键盘 上下左右按键滚动\n\n  * `scrollBarWidth` {`number`} - 滚动条宽度\n\n  * `scrollBarOutWidth` {`number`} - 滚动条 容器宽度，必须大与 滚动条宽度\n\n  * `minScrollheight` {`number`} - \n\n  * `wheelScrollChange` {`number`} - \n\n  * `_wheelTimeoutID` {`number`} - \n\n  * `_touchStartX` {`number`} - \n\n  * `_touchStartY` {`number`} - \n\n  * `rightBottom` {`HTMLElement`} - \n\n  * `contentDIV` {`HTMLDivElement`} - \n\n  * `containerDIV` {`HTMLDivElement`} - \n\n  * `partYScroll` {`HTMLDivElement`} - \n\n  * `partYHandler` {`HTMLDivElement`} - \n\n  * `partXScroll` {`HTMLDivElement`} - \n\n  * `partXHandler` {`HTMLDivElement`} - \n\n  * `_obersver` {`ResizeObserver`} - \n\n  * `_mutationObserver` {`MutationObserver`} - \n\n  * `_isMouseOn` {`boolean`} - \n\n  * `_MouseOnEventHandler` {`EventListener`} - \n\n  * `_MouseOutEventHandler` {`EventListener`} - \n\n  * `_docEventHandler` {`EventListener`} - \n\n  * `_resizeDispachFun` - \n\n  * `caculateYBarHeight` {`number`} - \n\n  * `caculateXBarWidth` {`number`} - \n\n  * `_yDispatchMethod` - \n\n  * `_xDispatchMethod` - \n\n  * `_scrollDispatchMethod` - \n\n  * `throttTime` {`number`} - 事件节流时间",
      "attributes": [
        {
          "name": "overflow-x",
          "description": "`overflow-x` {`string`} - hidden,则水平滚动条永远隐藏，否则根据内容自动显示隐藏\n\nProperty: overflowX\n\nDefault: "
        },
        {
          "name": "overflow-y",
          "description": "`overflow-y` {`string`} - hidden,则竖直滚动条隐藏，，否则根据内容自动显示隐藏\n\nProperty: overflowY\n\nDefault: "
        },
        {
          "name": "keyEnable",
          "description": "`keyEnable` {`boolean`} - 是否允许 键盘 上下左右按键滚动\n\nProperty: keyEnable\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "scroll-bar-width",
          "description": "`scroll-bar-width` {`number`} - 滚动条宽度\n\nProperty: scrollBarWidth\n\nDefault: 8"
        },
        {
          "name": "scroll-bar-out-width",
          "description": "`scroll-bar-out-width` {`number`} - 滚动条 容器宽度，必须大与 滚动条宽度\n\nProperty: scrollBarOutWidth\n\nDefault: 12"
        },
        {
          "name": "onresize",
          "description": "`resize` {`CustomEvent<unknown>`} - resize事件，当容器或者子孩子放生变化，此时触发"
        },
        {
          "name": "onscroll-change",
          "description": "`scroll-change` {`CustomEvent<{ scrollTop: number; scrollLeft: number; }>`} - 滚动事件，detail scrollTop,detail scrollLeft 说明内容滚动位置,"
        },
        {
          "name": "onscroll-y-end",
          "description": "`scroll-y-end` {`CustomEvent<{ value: number; }>`} - 竖直滚动到底部时触发，detail.value,内容滚动高度"
        },
        {
          "name": "onscroll-y",
          "description": "`scroll-y` {`CustomEvent<{ value: number; oldValue: number; }>`} - 竖直滚动的时触发, detail.value,内容滚动高度 detail.oldvalue,原来内容滚动高度"
        },
        {
          "name": "onscroll-x-end",
          "description": "`scroll-x-end` {`CustomEvent<{ value: number; }>`} - 水平滚动到最右侧触发      * detail.value 内容水平滚动大小"
        },
        {
          "name": "onscroll-x",
          "description": "`scroll-x` {`CustomEvent<{ value: number; oldValue: number; }>`} - 水平滚动时触发 detail.value 内容区水平滚动大小 detail.oldValue 原始内容区水平滚动大小"
        }
      ]
    },
    {
      "name": "p-option-group",
      "description": "Attributes:\n\n  * `label` {`string`} - \n\nProperties:\n\n  * `label` {`string`} - ",
      "attributes": [
        {
          "name": "label",
          "description": "`label` {`string`} - \n\nProperty: label"
        }
      ]
    },
    {
      "name": "p-option",
      "description": "Attributes:\n\n  * `label` {`string`} - \n\n  * `key` {`string`} - \n\n  * `value` {`string`} - \n\n  * `selected` {`boolean`} - \n\n  * `hidden` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\nProperties:\n\n  * `label` {`string`} - \n\n  * `key` {`string`} - \n\n  * `value` {`string`} - \n\n  * `selected` {`boolean`} - \n\n  * `hidden` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\n  * `option` {`HTMLElement`} - ",
      "attributes": [
        {
          "name": "label",
          "description": "`label` {`string`} - \n\nProperty: label"
        },
        {
          "name": "key",
          "description": "`key` {`string`} - \n\nProperty: key"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value"
        },
        {
          "name": "selected",
          "description": "`selected` {`boolean`} - \n\nProperty: selected",
          "valueSet": "v"
        },
        {
          "name": "hidden",
          "description": "`hidden` {`boolean`} - \n\nProperty: hidden",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "p-select",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ value: string; }>`} - \n\n  * `select` {`CustomEvent<{ value: string; }>`} - \n\nAttributes:\n\n  * `value` {`string`} - \n\n  * `name` {`string`} - \n\n  * `type` {`buttonTypeValue`} - \n\n  * `placeholder` {`string`} - \n\n  * `search` {`boolean`} - \n\n  * `required` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\nProperties:\n\n  * `value` {`string`} - \n\n  * `name` {`string`} - \n\n  * `type` {`buttonTypeValue`} - \n\n  * `placeholder` {`string`} - \n\n  * `search` {`boolean`} - \n\n  * `required` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\n  * `optionCotent` {`PPopContent`} - \n\n  * `pop` {`Ppop`} - ",
      "attributes": [
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value\n\nDefault: "
        },
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name"
        },
        {
          "name": "type",
          "description": "`type` {`buttonTypeValue`} - \n\nProperty: type",
          "values": [
            {
              "name": "primary"
            },
            {
              "name": "danger"
            },
            {
              "name": "flat"
            },
            {
              "name": "dashed"
            }
          ]
        },
        {
          "name": "placeholder",
          "description": "`placeholder` {`string`} - \n\nProperty: placeholder\n\nDefault: 请选址"
        },
        {
          "name": "search",
          "description": "`search` {`boolean`} - \n\nProperty: search",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "`required` {`boolean`} - \n\nProperty: required",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled",
          "valueSet": "v"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ value: string; }>`} - "
        },
        {
          "name": "onselect",
          "description": "`select` {`CustomEvent<{ value: string; }>`} - "
        }
      ]
    },
    {
      "name": "p-slider",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ value: number; }>`} - \n\n  * `input` {`CustomEvent<{ value: number; }>`} - \n\nAttributes:\n\n  * `name` {`string`} - \n\n  * `value` {`number`} - \n\n  * `vertical` {`boolean`} - \n\n  * `alwaysTip` {`boolean`} - \n\n  * `showtips` {`boolean`} - \n\n  * `required` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\n  * `suffix` {`string`} - \n\n  * `prefix` {`string`} - \n\n  * `lineSize` {`lineSize`} - \n\n  * `lineColor` {`string`} - \n\n  * `min` {`number`} - \n\n  * `max` {`number`} - \n\n  * `step` {`number`} - \n\nProperties:\n\n  * `input` {`unknown`} - \n\n  * `name` {`string`} - \n\n  * `value` {`number`} - \n\n  * `vertical` {`boolean`} - \n\n  * `alwaysTip` {`boolean`} - \n\n  * `showtips` {`boolean`} - \n\n  * `required` {`boolean`} - \n\n  * `disabled` {`boolean`} - \n\n  * `suffix` {`string`} - \n\n  * `prefix` {`string`} - \n\n  * `lineSize` {`lineSize`} - \n\n  * `lineColor` {`string`} - \n\n  * `min` {`number`} - \n\n  * `max` {`number`} - \n\n  * `step` {`number`} - \n\n  * `slider` {`HTMLInputElement`} - \n\n  * `form` {`HTMLFormElement`} - \n\n  * `_resizeObserver` {`ResizeObserver`} - \n\n  * `tipContent` {`string`} - \n\n  * `percent` {`number`} - ",
      "attributes": [
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name"
        },
        {
          "name": "value",
          "description": "`value` {`number`} - \n\nProperty: value\n\nDefault: 0"
        },
        {
          "name": "vertical",
          "description": "`vertical` {`boolean`} - \n\nProperty: vertical\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "alwaysTip",
          "description": "`alwaysTip` {`boolean`} - \n\nProperty: alwaysTip\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "showtips",
          "description": "`showtips` {`boolean`} - \n\nProperty: showtips\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "`required` {`boolean`} - \n\nProperty: required\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "suffix",
          "description": "`suffix` {`string`} - \n\nProperty: suffix\n\nDefault: undefined"
        },
        {
          "name": "prefix",
          "description": "`prefix` {`string`} - \n\nProperty: prefix\n\nDefault: undefined"
        },
        {
          "name": "lineSize",
          "description": "`lineSize` {`lineSize`} - \n\nProperty: lineSize\n\nDefault: undefined",
          "values": [
            {
              "name": ""
            },
            {
              "name": "mid"
            },
            {
              "name": "large"
            }
          ]
        },
        {
          "name": "lineColor",
          "description": "`lineColor` {`string`} - \n\nProperty: lineColor\n\nDefault: undefined"
        },
        {
          "name": "min",
          "description": "`min` {`number`} - \n\nProperty: min\n\nDefault: 0"
        },
        {
          "name": "max",
          "description": "`max` {`number`} - \n\nProperty: max\n\nDefault: undefined"
        },
        {
          "name": "step",
          "description": "`step` {`number`} - \n\nProperty: step\n\nDefault: 1"
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ value: number; }>`} - "
        },
        {
          "name": "oninput",
          "description": "`input` {`CustomEvent<{ value: number; }>`} - "
        }
      ]
    },
    {
      "name": "p-steps",
      "description": "Attributes:\n\n  * `current` {`number`} - 当前步骤，默认从0\n\n  * `vertical` {`boolean`} - 是否为竖直\n\n  * `startIndex` {`number`} - 起始节点显示 序号，默认为1\n\n  * `size` {`sizeType`} - 进度点 圆圈大小\n\nProperties:\n\n  * `current` {`number`} - 当前步骤，默认从0\n\n  * `vertical` {`boolean`} - 是否为竖直\n\n  * `startIndex` {`number`} - 起始节点显示 序号，默认为1\n\n  * `size` {`sizeType`} - 进度点 圆圈大小\n\n  * `styles` {`CSSResult`} - \n\n  * `childStep` {`PStep[]`} - ",
      "attributes": [
        {
          "name": "current",
          "description": "`current` {`number`} - 当前步骤，默认从0\n\nProperty: current\n\nDefault: 0"
        },
        {
          "name": "vertical",
          "description": "`vertical` {`boolean`} - 是否为竖直\n\nProperty: vertical\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "startIndex",
          "description": "`startIndex` {`number`} - 起始节点显示 序号，默认为1\n\nProperty: startIndex\n\nDefault: 1"
        },
        {
          "name": "size",
          "description": "`size` {`sizeType`} - 进度点 圆圈大小\n\nProperty: size",
          "values": [
            {
              "name": "small"
            },
            {
              "name": "mid"
            },
            {
              "name": "large"
            }
          ]
        }
      ]
    },
    {
      "name": "p-step",
      "description": "Attributes:\n\n  * `icon` {`string`} - \n\n  * `description` {`string`} - \n\n  * `title` {`string`} - \n\n  * `index` {`number`} - \n\nProperties:\n\n  * `icon` {`string`} - \n\n  * `description` {`string`} - \n\n  * `title` {`string`} - \n\n  * `index` {`number`} - \n\n  * `styles` {`CSSResult`} - \n\n  * `parentSteps` {`PSteps`} - ",
      "attributes": [
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: undefined"
        },
        {
          "name": "description",
          "description": "`description` {`string`} - \n\nProperty: description"
        },
        {
          "name": "title",
          "description": "`title` {`string`} - \n\nProperty: title"
        },
        {
          "name": "index",
          "description": "`index` {`number`} - \n\nProperty: index\n\nDefault: 0"
        }
      ]
    },
    {
      "name": "p-switch",
      "description": "Events:\n\n  * `change` {`CustomEvent<{ checked: boolean; }>`} - \n\nAttributes:\n\n  * `disabled` {`boolean`} - \n\n  * `value` {`string`} - \n\n  * `checked` {`boolean`} - \n\n  * `name` {`string`} - \n\nProperties:\n\n  * `disabled` {`boolean`} - \n\n  * `value` {`string`} - \n\n  * `checked` {`boolean`} - \n\n  * `name` {`string`} - \n\n  * `styles` {`CSSResult`} - ",
      "attributes": [
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "`value` {`string`} - \n\nProperty: value\n\nDefault: "
        },
        {
          "name": "checked",
          "description": "`checked` {`boolean`} - \n\nProperty: checked\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name\n\nDefault: "
        },
        {
          "name": "onchange",
          "description": "`change` {`CustomEvent<{ checked: boolean; }>`} - "
        }
      ]
    },
    {
      "name": "p-tab",
      "description": "Events:\n\n  * `beforeChange` {`CustomEvent<{ tabContent: PTabContent; label: string; key: string; }>`} - \n\n  * `tab-change` {`CustomEvent<{ tabContent: PTabContent; label: string; index: number; key: string; }>`} - \n\n  * `tab-change-end` {`CustomEvent<{ tabContent: PTabContent; label: string; index: number; key: string; }>`} - \n\nAttributes:\n\n  * `tabPosition` {`tabPosition`} - \n\n  * `activeKey` {`string`} - \n\n  * `tabAgile` {`tabAgile`} - \n\nProperties:\n\n  * `tabPosition` {`tabPosition`} - \n\n  * `activeKey` {`string`} - \n\n  * `tabAgile` {`tabAgile`} - \n\n  * `childTabPanel` {`PTabContent[]`} - \n\n  * `activeTab` {`PTabContent`} - \n\n  * `activeTabByIndex` {`number`} - ",
      "attributes": [
        {
          "name": "tabPosition",
          "description": "`tabPosition` {`tabPosition`} - \n\nProperty: tabPosition\n\nDefault: top",
          "values": [
            {
              "name": "top"
            },
            {
              "name": "left"
            },
            {
              "name": "bottom"
            },
            {
              "name": "right"
            }
          ]
        },
        {
          "name": "activeKey",
          "description": "`activeKey` {`string`} - \n\nProperty: activeKey\n\nDefault: null"
        },
        {
          "name": "tabAgile",
          "description": "`tabAgile` {`tabAgile`} - \n\nProperty: tabAgile\n\nDefault: null",
          "values": [
            {
              "name": ""
            },
            {
              "name": "space-around"
            },
            {
              "name": "space-between"
            },
            {
              "name": "space-evenly"
            },
            {
              "name": "flex-start"
            },
            {
              "name": "flex-end"
            }
          ]
        },
        {
          "name": "onbeforeChange",
          "description": "`beforeChange` {`CustomEvent<{ tabContent: PTabContent; label: string; key: string; }>`} - "
        },
        {
          "name": "ontab-change",
          "description": "`tab-change` {`CustomEvent<{ tabContent: PTabContent; label: string; index: number; key: string; }>`} - "
        },
        {
          "name": "ontab-change-end",
          "description": "`tab-change-end` {`CustomEvent<{ tabContent: PTabContent; label: string; index: number; key: string; }>`} - "
        }
      ]
    },
    {
      "name": "p-tab-content",
      "description": "Attributes:\n\n  * `label` {`string`} - \n\n  * `key` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `disabled` {`boolean`} - \n\nProperties:\n\n  * `label` {`string`} - \n\n  * `key` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `disabled` {`boolean`} - \n\n  * `tab` {`PTab`} - ",
      "attributes": [
        {
          "name": "label",
          "description": "`label` {`string`} - \n\nProperty: label\n\nDefault: null"
        },
        {
          "name": "key",
          "description": "`key` {`string`} - \n\nProperty: key\n\nDefault: null"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: null"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - \n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "p-text",
      "description": "Attributes:\n\n  * `rows` {`number`} - \n\n  * `draggable` {`false`} - \n\n  * `mark` {`false`} - \n\n  * `code` {`false`} - \n\n  * `type` {`typeString`} - \n\nProperties:\n\n  * `rows` {`number`} - \n\n  * `draggable` {`false`} - \n\n  * `mark` {`false`} - \n\n  * `code` {`false`} - \n\n  * `type` {`typeString`} - \n\n  * `_truncated` {`boolean`} - \n\n  * `styles` {`CSSResult`} - \n\n  * `truncated` {`boolean`} - \n\n  * `_resizeObserver` {`ResizeObserver`} - ",
      "attributes": [
        {
          "name": "rows",
          "description": "`rows` {`number`} - \n\nProperty: rows\n\nDefault: undefined"
        },
        {
          "name": "draggable",
          "description": "`draggable` {`false`} - \n\nProperty: draggable"
        },
        {
          "name": "mark",
          "description": "`mark` {`false`} - \n\nProperty: mark"
        },
        {
          "name": "code",
          "description": "`code` {`false`} - \n\nProperty: code"
        },
        {
          "name": "type",
          "description": "`type` {`typeString`} - \n\nProperty: type",
          "values": [
            {
              "name": ""
            },
            {
              "name": "code"
            },
            {
              "name": "mark"
            },
            {
              "name": "success"
            },
            {
              "name": "warning"
            },
            {
              "name": "error"
            }
          ]
        }
      ]
    },
    {
      "name": "p-tips",
      "description": "Attributes:\n\n  * `show` {`showType`} - \n\n  * `tips` {`string`} - \n\n  * `color` {`string`} - \n\n  * `type` {`typeType`} - \n\n  * `dir` {`dirType`} - \n\nProperties:\n\n  * `show` {`showType`} - \n\n  * `tips` {`string`} - \n\n  * `color` {`string`} - \n\n  * `type` {`typeType`} - \n\n  * `dir` {`dirType`} - \n\n  * `_isAutoDir` {`boolean`} - \n\n  * `_autoHander` {`EventListenerOrEventListenerObject`} - ",
      "attributes": [
        {
          "name": "show",
          "description": "`show` {`showType`} - \n\nProperty: show\n\nDefault: null",
          "values": [
            {
              "name": ""
            },
            {
              "name": "true"
            },
            {
              "name": "false"
            }
          ]
        },
        {
          "name": "tips",
          "description": "`tips` {`string`} - \n\nProperty: tips\n\nDefault: null"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - \n\nProperty: color\n\nDefault: null"
        },
        {
          "name": "type",
          "description": "`type` {`typeType`} - \n\nProperty: type\n\nDefault: null",
          "values": [
            {
              "name": "success"
            },
            {
              "name": "warning"
            },
            {
              "name": "error"
            }
          ]
        },
        {
          "name": "dir",
          "description": "`dir` {`dirType`} - \n\nProperty: dir\n\nDefault: auto",
          "values": [
            {
              "name": "top"
            },
            {
              "name": "topleft"
            },
            {
              "name": "topright"
            },
            {
              "name": "left"
            },
            {
              "name": "lefttop"
            },
            {
              "name": "leftbottom"
            },
            {
              "name": "bottom"
            },
            {
              "name": "bottomleft"
            },
            {
              "name": "bottomright"
            },
            {
              "name": "right"
            },
            {
              "name": "righttop"
            },
            {
              "name": "rightbottom"
            },
            {
              "name": "auto"
            }
          ]
        }
      ]
    },
    {
      "name": "p-tree-node",
      "description": "Attributes:\n\n  * `nodeRender` {`TreeNodeRender`} - \n\n  * `data` {`TreeNodeData`} - \n\n  * `name` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `close` {`boolean`} - \n\n  * `closeable` {`boolean`} - \n\nProperties:\n\n  * `nodeRender` {`TreeNodeRender`} - \n\n  * `data` {`TreeNodeData`} - \n\n  * `name` {`string`} - \n\n  * `icon` {`string`} - \n\n  * `close` {`boolean`} - \n\n  * `closeable` {`boolean`} - \n\n  * `subNodeSize` {`number`} - ",
      "attributes": [
        {
          "name": "nodeRender",
          "description": "`nodeRender` {`TreeNodeRender`} - \n\nProperty: nodeRender\n\nDefault: null"
        },
        {
          "name": "data",
          "description": "`data` {`TreeNodeData`} - \n\nProperty: data\n\nDefault: null"
        },
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name\n\nDefault: null"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - \n\nProperty: icon\n\nDefault: null"
        },
        {
          "name": "close",
          "description": "`close` {`boolean`} - \n\nProperty: close\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "closeable",
          "description": "`closeable` {`boolean`} - \n\nProperty: closeable\n\nDefault: true",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "p-tree",
      "description": "Attributes:\n\n  * `startKey` {`string | number`} - \n\n  * `includeStartNode` {`boolean`} - \n\n  * `rootCloseable` {`boolean`} - \n\n  * `filter-string` {`string`} - \n\n  * `data` {`TreeNodeData`} - \n\n  * `filterFn` {`TreeFilter`} - \n\n  * `nodeRender` {`TreeNodeRender`} - \n\nProperties:\n\n  * `startKey` {`string | number`} - \n\n  * `includeStartNode` {`boolean`} - \n\n  * `rootCloseable` {`boolean`} - \n\n  * `filterString` {`string`} - \n\n  * `data` {`TreeNodeData`} - \n\n  * `filterFn` {`TreeFilter`} - \n\n  * `nodeRender` {`TreeNodeRender`} - \n\n  * `filterData` {`TreeNodeData`} - \n\n  * `allTreeNode` {`PTreeNode[]`} - \n\n  * `startNode` {`TreeNodeData`} - \n\n  * `_observer` {`MutationObserver`} - ",
      "attributes": [
        {
          "name": "startKey",
          "description": "`startKey` {`string | number`} - \n\nProperty: startKey\n\nDefault: null",
          "values": []
        },
        {
          "name": "includeStartNode",
          "description": "`includeStartNode` {`boolean`} - \n\nProperty: includeStartNode\n\nDefault: null",
          "valueSet": "v"
        },
        {
          "name": "rootCloseable",
          "description": "`rootCloseable` {`boolean`} - \n\nProperty: rootCloseable\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "filter-string",
          "description": "`filter-string` {`string`} - \n\nProperty: filterString\n\nDefault: null"
        },
        {
          "name": "data",
          "description": "`data` {`TreeNodeData`} - \n\nProperty: data\n\nDefault: null"
        },
        {
          "name": "filterFn",
          "description": "`filterFn` {`TreeFilter`} - \n\nProperty: filterFn\n\nDefault: null"
        },
        {
          "name": "nodeRender",
          "description": "`nodeRender` {`TreeNodeRender`} - \n\nProperty: nodeRender\n\nDefault: null"
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}